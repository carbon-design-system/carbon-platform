{"expireTime":1682176503272,"key":"github.com GET /search/issues q=Inline loading+repo:carbon-design-system/carbon+is:issue+is:open+in:title","val":{"total_count":1,"incomplete_results":false,"items":[{"url":"https://api.github.com/repos/carbon-design-system/carbon/issues/11259","repository_url":"https://api.github.com/repos/carbon-design-system/carbon","labels_url":"https://api.github.com/repos/carbon-design-system/carbon/issues/11259/labels{/name}","comments_url":"https://api.github.com/repos/carbon-design-system/carbon/issues/11259/comments","events_url":"https://api.github.com/repos/carbon-design-system/carbon/issues/11259/events","html_url":"https://github.com/carbon-design-system/carbon/issues/11259","id":1210233937,"node_id":"I_kwDOBQ58z85IIrRR","number":11259,"title":"[a11y]: loading and inline loading not consistently providing status programmatically","user":{"login":"mbgower","id":14298245,"node_id":"MDQ6VXNlcjE0Mjk4MjQ1","avatar_url":"https://avatars.githubusercontent.com/u/14298245?v=4","gravatar_id":"","url":"https://api.github.com/users/mbgower","html_url":"https://github.com/mbgower","followers_url":"https://api.github.com/users/mbgower/followers","following_url":"https://api.github.com/users/mbgower/following{/other_user}","gists_url":"https://api.github.com/users/mbgower/gists{/gist_id}","starred_url":"https://api.github.com/users/mbgower/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbgower/subscriptions","organizations_url":"https://api.github.com/users/mbgower/orgs","repos_url":"https://api.github.com/users/mbgower/repos","events_url":"https://api.github.com/users/mbgower/events{/privacy}","received_events_url":"https://api.github.com/users/mbgower/received_events","type":"User","site_admin":false},"labels":[{"id":1056028613,"node_id":"MDU6TGFiZWwxMDU2MDI4NjEz","url":"https://api.github.com/repos/carbon-design-system/carbon/labels/type:%20a11y%20%E2%99%BF","name":"type: a11y ♿","color":"3ddbd9","default":false,"description":""},{"id":2143303778,"node_id":"MDU6TGFiZWwyMTQzMzAzNzc4","url":"https://api.github.com/repos/carbon-design-system/carbon/labels/status:%20needs%20triage%20%F0%9F%95%B5%EF%B8%8F%E2%80%8D%E2%99%80%EF%B8%8F","name":"status: needs triage 🕵️‍♀️","color":"D4BBFF","default":false,"description":""},{"id":2218532206,"node_id":"MDU6TGFiZWwyMjE4NTMyMjA2","url":"https://api.github.com/repos/carbon-design-system/carbon/labels/screen-reader:%20JAWS","name":"screen-reader: JAWS","color":"FFAFD2","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-04-20T21:34:41Z","updated_at":"2022-04-21T21:57:49Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"### Package\r\n\r\n@carbon/react\r\n\r\n### Browser\r\n\r\nChrome\r\n\r\n### Operating System\r\n\r\nMacOS\r\n\r\n### Package version\r\n\r\nhttps://react.carbondesignsystem.com/?path=/story/components-inlineloading--inline-loading\r\n\r\n### React version\r\n\r\n_No response_\r\n\r\n### Automated testing tool and ruleset\r\n\r\nn/a\r\n\r\n### Assistive technology\r\n\r\nJAWS, keyboard\r\n\r\n### Description\r\n\r\nThere are a number of considerations around loading patterns in Carbon that need to be addressed, ranging from clear accessibility bugs to inconsistencies. Several are listed here; I will add a few more after reviewing with CAG.\r\n\r\n### Default inline loading\r\nThe [default implementation of inline loading](https://react.carbondesignsystem.com/?path=/story/components-inlineloading--inline-loading) on storybook uses aria-live to surface status (good!); however, the implementation is sometimes causing overly verbose output from the JAWS screen reader (not good). Note that any changes to the text can get read 3 times! (Haven't been able to get to do this repetition.) This may be partly a result of the storybook container; testing needs to be carried out on an actual implementation\r\n![image](https://user-images.githubusercontent.com/14298245/164316694-a6609b30-9cc0-4acd-a2d6-5d8edf7f02ff.png)\r\n\r\n   1. part of this may be due to aria-live being set to assertive (instead of polite) OR\r\n   3. by aria-live assigned to multiple elements (the div and its child), or\r\n   4. by having the child attribute assigned both a live region and what I suspect is an unnecessary label (\"Active loading indicator\") or\r\n   5. some combination of these\r\n\r\nI recommend considering a simple label for the symbol (for instance \"loading\") that can provide sufficient information whether the \"Loading data...\" text is also displayed or not.\r\n\r\n### UX example inline loading\r\nThe second working example \"Ux Example\" is an interaction comprising a set of Cancel and Submit buttons. \r\n![image.png](https://zenhub.ibm.com/images/5cab73f442b8dc5ede7b84cc/1b816b0c-326a-4f38-a137-57e32a3639a6)\r\nWhen you activate Submit, the text changes to \"Submitting...\" and then \"Submitted\" before returning to \"Submit\"\r\nThis example does not have an aria-live region set and so is not announced by screen readers. ([sev 2 BUG](https://ibm.box.com/s/thsragowvz98nlviduxlfktyso4iext3)) This is easily solved by putting aria-live on the div preceding the button --[JAWS announces the text changes](https://ibm.box.com/s/itq68565uz796mp1jgyzxdsn124ay93u). Without the storybook, I think the updates would read fine (although the visual 'pause' between \"Submitted\" and the text returning to \"Submit\" is lost on a screen reader. But I would do some testing in a real world environment.\r\n\r\n![image.png](https://zenhub.ibm.com/images/5cab73f442b8dc5ede7b84cc/76fefddc-5ba4-48de-884a-2aaca4901e5f)\r\n\r\n### Loading Default example\r\nThe main difference between Loading and Inline loading appears to be that Loading is thought of as strictly a visual animation of a spinning wheel, while inline loading can have text, etc\r\n\r\nThe loading icon is announced okay by JAWS. It reads out the region, the image and \"indicator\" (which I think is the result of a buffer and the aria-live assertive setting).\r\n\r\n> Active loading indicator\r\nActive loading indicator graphic\r\nindicator\r\n\r\n I find this redundant, and don't understand why the choice was made to surface it all. It would be worth a bit of investigation and should be easily solved, but it is a fairly trivial repetition, so I'm not even sure I'd describe it as a bug, more of a non-delightful experience.\r\n\r\n### Why are inline loading and loading treated as separate components?\r\n\r\nInline loading is a separate component from Loading on the Carbon Design System website and storybook; however in Sketch and Figma, inline loading is a variant on Loading.  I think this makes sense, overall, and I suggest the two components be combined. If desired to keep separate, then they should be separated in the Design kit, IMO.\r\n\r\n### Sketch vs Figma vs implementation\r\nNote that there _are_ some differences in how Figma and Sketch show the inline loading that should be addressed. Sketch includes inline loading on text inputs; Figma does not. Figma includes a icon-less version (which I think is the 'inactive' one); Sketch does not. Neither show the above implemented variant of a button that updates its text. I consider that almost a different variant.\r\n<img width=\"866\" alt=\"image\" src=\"https://user-images.githubusercontent.com/14298245/164477377-3562b463-24a6-48d4-9c7e-5cf72ecf218b.png\">\r\n\r\n![image](https://user-images.githubusercontent.com/14298245/164326328-7bab826b-e88d-4721-b623-00ef780fa9ec.png)\r\n![image](https://user-images.githubusercontent.com/14298245/164326397-f1db984c-8a8e-41de-be98-955efdc89b7c.png)\r\n\r\n### Purpose of inactive?\r\nSpeaking of inactive, I'm trying to understand the use case for this. How do you have an inactive upload? There are programmatic advantages to having the inline loading established programmatically (since you can set up the live region); however, I don't understand inactive's usage from a documentation/designer perspective.\r\n### WCAG 2.1 Violation\r\n\r\nhttps://www.w3.org/WAI/WCAG21/Understanding/status-messages.html\r\n\r\n### CodeSandbox example\r\n\r\nhttps://react.carbondesignsystem.com/?path=/story/components-inlineloading--inline-loading\r\n\r\n### Steps to reproduce\r\n\r\n1. Go to https://react.carbondesignsystem.com/?path=/story/components-inlineloading--inline-loading\r\n1. Turn on JAWS\r\n2. Listen to output when loading page, or modifying the values\r\n\r\n### Code of Conduct\r\n\r\n- [X] I agree to follow this project's [Code of Conduct](https://github.com/carbon-design-system/carbon/blob/f555616971a03fd454c0f4daea184adf41fff05b/.github/CODE_OF_CONDUCT.md)\r\n- [X] I checked the [current issues](https://github.com/carbon-design-system/carbon/issues) for duplicate problems","reactions":{"url":"https://api.github.com/repos/carbon-design-system/carbon/issues/11259/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/carbon-design-system/carbon/issues/11259/timeline","performed_via_github_app":null,"score":1}]}}