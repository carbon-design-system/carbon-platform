@use '@carbon/react/scss/breakpoint' as breakpoint;
@use '@carbon/react/scss/spacing' as spacing;
@use '@carbon/react/scss/theme' as theme;
@use '@carbon/react/scss/type' as type;
@use '@carbon/react/scss/motion' as motion;
@use '../../styles/variables' as variables;
@use 'sass:map';
@use '@carbon/react/scss/utilities/convert' as convert;

.svg-page {
  // prevent jank while importing icons
  min-height: 60vh;
  padding-top: spacing.$spacing-07;
}

@media screen and (prefers-reduced-motion: reduce) {
  .filter-row {
    position: sticky;
    z-index: map.get(variables.$z-indexes, 'floating');
    top: 7rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    border-bottom: 1px solid theme.$border-subtle-01;
    transition: none;
    @include breakpoint.breakpoint('md') {
      flex-direction: row;
      align-items: flex-end;
    }
  }
}

.filter-row {
  position: sticky;
  z-index: map.get(variables.$z-indexes, 'floating');
  top: 7rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  border-bottom: 1px solid theme.$border-subtle-01;
  transition: box-shadow motion.$duration-fast-02 ease;
  @include breakpoint.breakpoint('md') {
    flex-direction: row;
    align-items: flex-end;
  }
}

.filter-row[data-stuck] {
  box-shadow: variables.$drop-shadow;
}

// override carbon, search styling
.filter-row :global(.cds--search) {
  @include breakpoint.breakpoint('md') {
    width: calc(50% + convert.rem(1px));
    border-right: 1px solid theme.$border-subtle-01;
  }
  @include breakpoint.breakpoint('lg') {
    width: calc(66.666% + convert.rem(1px));
    border-right: 1px solid theme.$border-subtle-01;
  }
}

// override carbon, search styling
.filter-row :global(.cds--search-input) {
  border-bottom: 1px solid theme.$border-subtle-01;
  font-size: 1rem;
  line-height: inherit;
  @include breakpoint.breakpoint('md') {
    border-bottom: none;
  }
}

// override carbon, dropdown border
.filter-row :global(.cds--dropdown) {
  border-bottom: none;
}

// override carbon, dropdown width
.filter-row :global(.cds--dropdown__wrapper) {
  width: 100%;
  flex-grow: 1;
  @include breakpoint.breakpoint('md') {
    width: auto;
  }
}

.no-result :global(.resource-card-group) {
  margin-top: spacing.$spacing-06;
  margin-right: 0;
  margin-left: 0;
}

// override carbon, search width
.filter-row.pictograms :global(.cds--search) {
  @include breakpoint.breakpoint('lg') {
    width: calc(75% + convert.rem(1px));
  }
}

.filter-row::before {
  position: absolute;
  z-index: map.get(variables.$z-indexes, 'floating');
  top: -1rem;
  width: 100%;
  height: 1rem;
  background: theme.$background;
  content: '';
}

.dropdown {
  border-bottom: 0;
}

.svg-library {
  overflow: hidden;
  @include breakpoint.breakpoint('md') {
    overflow: visible;
  }
}

.svg-category .category-title {
  margin: 0;
  margin-top: spacing.$spacing-11;
  margin-left: spacing.$spacing-05;
  color: theme.$text-primary;
}

// i.e. fallback
.svg-grid {
  display: grid;
  width: 100%;
  flex-wrap: wrap;
  margin-top: spacing.$spacing-05;
  grid-template-columns: repeat(2, 1fr);

  @include breakpoint.breakpoint('md') {
    grid-template-columns: repeat(4, 1fr);
  }

  @include breakpoint.breakpoint('lg') {
    grid-template-columns: repeat(6, 1fr);
  }
}

$svg-card-border: 1px solid theme.$border-subtle-01;

.svg-card {
  position: relative;
  height: 0;
  padding-top: 100%;
  border-top: $svg-card-border;
  border-left: $svg-card-border;
  background-color: theme.$layer-01;

  &:first-child {
    border-left: none;
  }

  // first row
  &:nth-child(-n + 2) {
    border-top: none;
  }

  // every other card
  &:nth-child(odd) {
    border-left: none;
  }
}

@include breakpoint.breakpoint('md') {
  .svg-card {
    // reset 2 column borders
    &:nth-child(-n + 2) {
      border-top: $svg-card-border;
    }

    &:nth-child(odd) {
      border-left: $svg-card-border;
    }

    // first row of 4
    &:nth-child(-n + 4) {
      border-top: none;
    }
    // every 4th card (starting with 5th)
    &:nth-child(4n + 1) {
      border-left: none;
    }
  }
}

@include breakpoint.breakpoint('lg') {
  .svg-card {
    // reset 4 column borders
    &:nth-child(-n + 4) {
      border-top: $svg-card-border;
    }

    &:nth-child(4n + 1) {
      border-left: $svg-card-border;
    }

    // first row of 6
    &:nth-child(-n + 6) {
      border-top: none;
    }

    // every 6th card (starting with 7th)
    &:nth-child(6n + 1) {
      border-left: none;
    }
  }
}

.svg-grid.pictograms {
  grid-template-columns: repeat(2, 1fr);

  @include breakpoint.breakpoint('lg') {
    grid-template-columns: repeat(4, 1fr);
  }
}

.pictograms .svg-card {
  border-top: $svg-card-border;
  border-left: $svg-card-border;

  // reset 2 column borders
  &:nth-child(-n + 2) {
    border-top: none;
  }

  &:nth-child(odd) {
    border-left: $svg-card-border;
  }

  // every 2nd card (starting with 4th)
  &:nth-child(2n + 1) {
    border-left: none;
  }
}

@include breakpoint.breakpoint('lg') {
  .pictograms .svg-card {
    // reset 4 column borders
    &:nth-child(odd) {
      border-left: $svg-card-border;
    }

    &:nth-child(-n + 4) {
      border-top: none;
    }

    &:nth-child(4n + 1) {
      border-left: none;
    }
  }
}

.svg-card-inside {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.flex-container {
  display: flex;
  height: 100%;
  align-items: center;
  justify-content: center;
}

@media screen and (prefers-reduced-motion: reduce) {
  .flex-container svg {
    animation: none;
  }
}

.flex-container svg {
  animation: fade-in motion.$duration-fast-01 motion.motion(standard, productive);
  fill: theme.$icon-primary;
}

@keyframes fade-in {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

.svg-card .trigger-text {
  @include type.type-style('label-01');

  position: absolute;
  top: spacing.$spacing-04;
  left: spacing.$spacing-05;
  width: 100%;
  max-width: calc(100% - convert.rem(32px));

  color: theme.$text-primary;
}

.no-result .search-label {
  display: inline-block;
  margin-top: spacing.$spacing-03;
  margin-left: spacing.$spacing-05;
}

.no-result .all-svgs {
  cursor: pointer;
  font-size: inherit;
  text-decoration: underline;
}

.no-result h2 {
  margin: 0;
  margin-top: spacing.$spacing-11;
  margin-left: spacing.$spacing-05;
}

.no-result p {
  max-width: convert.rem(400px);
  margin: 0;
  margin-top: spacing.$spacing-06;
  margin-left: spacing.$spacing-05;
}

.no-result :global(.resource-card-group) img {
  width: convert.rem(32px);
}

.icon {
  position: relative;
  display: inline-block;
  width: convert.rem(32px);
  object-fit: contain;
  user-select: none;
  vertical-align: text-bottom;
}

.icon-inverse {
  fill: theme.$icon-inverse;
}
